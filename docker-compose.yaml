version: '3'

services:
  
  qrgen:
    container_name: qrgen
    hostname: qrgen
    environment:
      APP_PORT: 8080
      GRPC_SERVER_PORT: 8081
      GRPC_OTEL_COLLECTOR: otel:4317
    ports:
      - 80:8080
    restart: always

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/etc/prometheus
    command: --config.file=/etc/prometheus/prometheus.yaml 
    restart: always

  jaeger:
    container_name: jaeger
    hostname: jaeger
    image: jaegertracing/all-in-one:1.29.0
    ports:
      - "16686:16686" # UI
      - "14250:14250" # write traces

  otel:
    container_name: otel
    hostname: otel
    image: otel/opentelemetry-collector
    depends_on:
      - jaeger
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      # - "8888:8888"   # Prometheus metrics exposed by the collector
      # - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
    volumes:
      - ./config/otel/otel.yaml:/etc/otel/otel.yaml
      - otel_data:/etc/otel
    command: --config /etc/otel/otel.yaml

  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana-enterprise
    depends_on:
      - prometheus
      - jaeger
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always
volumes:
  prometheus_data: {}
  grafana_data: {}
  otel_data: {}